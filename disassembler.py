#!/usr/bin/env python

#import uncompyle6
import dis
import sys
import os
import marshal

#disassemble .pyc file.
def disassemble_file_pyc(filename, mode):
    if mode == 'h' or mode == 'help':
        show_help()

    elif mode == 'd' or mode == 'D':
        with open(filename, 'rb') as f:
         f.seek(16)
         dis.disassemble(marshal.load(f))  
        
    elif mode == 't' or mode == 'T':
        with open(filename, 'rb') as f:
          magic = f.read(4) # read the magic number
          moddate = f.read(4) # read the modification timestamp
          code = f.read() # read the bytecode
        dis.dis(code)

    elif mode == 'a' or mode == 'A':
        with open(filename, "rb") as f:
           f.seek(16)
           dis.show_code(marshal.load(f))         
    else:
        print("Invalid mode. Use either -d or -t.")
        show_help()
        
        
#disassemble .py file.      
def disassemble_file_py(filename, mode):

    if mode == 'h' or mode == 'help':
        show_help()
        
    elif mode == 'd' or mode == 'D':
        with open(filename, "rb") as f:
           code_str = f.read()
        code_obj = compile(code_str, filename, "exec")
        dis.disassemble(code_obj)   
        
    elif mode == 't':
        with open(filename, 'rb') as f:
          magic = f.read(4) # read the magic number
          moddate = f.read(4) # read the modification timestamp
          code = f.read() # read the bytecode
        dis.dis(code)

    elif mode == 'a':
        with open(filename, "rb") as f:
           code_str = f.read()
        code_obj = compile(code_str, filename, "exec")
        dis.show_code(code_obj) 
        
        
    else:
        print("Invalid mode. Use either -d or -t.")
        show_help()
        
#usage and help information about the disassembler tool
def show_help():
    try:
        print("Usage: ./disassembler.py -[OPTION] FILE.pyc or FILE.py\n")
        print("\tFormat: $./disassembler -[option] [filename].py\n")
        print("  Options: only for .pyc file\n")
        print("\t--d,  --D\t\tUse disassembler tool 1")
        print("\t--t,  --T\t\tUse disassembler tool 2")
        print("\t--a,  --A\t\tUse disassembler tool 3")
        print("\t--b,  --B\t\tUse disassembler tool 4")
        print("\t--c,  --C\t\tUse disassembler tool 5")
        print("\t--e,  --E\t\tUse disassembler tool 6")
        print("\t--h/--help\t\tShow this help message\n")

        print("  Options: only for .py file\n")
        print("\t--f,  --F\t\tUse disassembler tool 1")
        print("\t--g,  --G\t\tUse disassembler tool 2")
        print("\t--h,  --H\t\tUse disassembler tool 3")
        print("\t--i,  --I\t\tUse disassembler tool 4")
        print("\t--j,  --j\t\tUse disassembler tool 5")
        print("\t--k,  --K\t\tUse disassembler tool 6")
        print("\t--h/--help\t\tShow this help message")
    except Exception as e:
        raise e


if __name__ == '__main__':
    #Check if no arguments are provided or the name of the program is incorrect
    if len(sys.argv) == 1  and sys.argv[0] == "./disassembler.py":
       show_help()
       sys.exit(1)
       
    #Get the mode argument and check if the correct number of arguments is provided
    mode = sys.argv[1][:2]
    if len(sys.argv) != 3 or mode != "--":
       show_help()
       sys.exit(1)
       
    #Get the filename argument and check if it exists   
    filename = sys.argv[2] 
    if not os.path.isfile(filename):
         print(f"Error: file '{filename}': Could not open the binary for disassembly!")
         sys.exit(1)
         
    #If all arguments are correct, disassemble the file using the specified mode     
    if len(sys.argv) == 3:
        mode = sys.argv[1].lstrip("--")
        if sys.argv[2][-2:] == "yc":
          disassemble_file_pyc(filename, mode)
        else:
          disassemble_file_py(filename, mode)
    else:
        print("Invalid arguments. Usage: python3 disassembler.py -[option] filename")
